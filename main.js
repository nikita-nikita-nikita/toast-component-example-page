!function(t){var e={};function s(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,o){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(o,n,function(e){return t[e]}.bind(null,n));return o},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e,s){},function(t,e,s){},function(t,e,s){"use strict";s.r(e);s(0),s(1);var o=function(t,e,s){const o=document.createElement("header");return o.classList.add("toast__toast-header"),o.appendChild(function(t=""){const e=document.createElement("strong");return e.classList.add("toast-header__title"),e.innerHTML=t,e}(t)),o.appendChild(function(t="just now"){const e=document.createElement("small");return e.classList.add("toast-header__time-text"),e.innerHTML=t,e}()),o.appendChild(function(t,e,s="&times;"){const o=document.createElement("button");o.classList.add("toast-header__close-button"),o.innerHTML=`<span class="close-button__close-icon">${s}</span>`,e||o.addEventListener("click",t);return o}(e,s)),o};var n=function(t){const e=document.createElement("div");return e.classList.add("toast-body"),e.innerHTML=t,e};var a=function(t,e,{id:s,status:a="",closeOnClick:i=!1,closeToast:r}){const l=document.createElement("div");l.classList.add("toast"),s&&(l.id=s);const c=()=>{l.classList.add("deleted-toast-animation"),setTimeout(()=>{l.classList.add("deleted-toast")},1e3),r&&r()};return l.appendChild(o(e,c,i)),l.appendChild(n(t)),l.classList.add("toast-"+a),i&&l.addEventListener("click",c),{toast:l,closeFunction:c}};var i=function(){return String((+new Date*Math.random()*1e8).toString(16))};class r{constructor(t,{rootElement:e=document.body,doNotGenerateContainer:s,title:o,...n}){this.options={},this.toasts=[],this.lastCreatedToast=null,this.oldestToast=null,this.options=n,this.toastContainer=s?e:this.generateToastsContainer(e,n.position),t&&this.createNew(t,o,n)}generateToastsContainer(t,e="top-right"){const s=document.createElement("div");return s.classList.add("toasts-container"),s.classList.add("toasts-position-"+e),t.appendChild(s),s}createNew(t,e=""){if(!t)return;const s=i(),o=this.options.autoCloseDuration?setTimeout(()=>{l.closeToast()},this.options.autoCloseDuration):null,{toast:n,closeFunction:r}=a(t,e,{...this.options,id:s,closeToast:()=>{o&&clearTimeout(o),this.toasts=this.toasts.filter(({id:t})=>s!==t),this.toasts.length?(this.oldestToast=this.toasts[0],this.lastCreatedToast=this.toasts[this.toasts.length-1]):(this.oldestToast=null,this.lastCreatedToast=null)}}),l={id:s,toast:n,closeToast:r};return this.lastCreatedToast=l,this.oldestToast||(this.oldestToast=l),this.toastContainer.appendChild(l.toast),this.toasts.push(l),l}closeLast(){this.lastCreatedToast&&this.lastCreatedToast.closeToast()}closeOld(){this.lastCreatedToast&&this.oldestToast.closeToast()}}const l=new r("Hello, that's example page, enjoy",{title:"im title",status:"success"});let c=0;document.querySelector(".message").addEventListener("submit",t=>{t.preventDefault();const e=new FormData(t.target);l.createNew(e.get("message"),"im title")}),document.querySelector("#duration-input").addEventListener("input",({target:t})=>{c=+t.value}),document.querySelector("#set-duration").addEventListener("click",()=>{l.options.autoCloseDuration=c}),document.querySelector("#status-select").addEventListener("change",({target:t})=>{l.options.status=t.value}),document.querySelector("#close-checkbox").addEventListener("input",t=>{l.options.closeOnClick=t.target.checked})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,